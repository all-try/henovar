---
import { generateWhatsAppURL } from '../data/whatsapp.ts';
import WhatsApp from './icons/WhatsApp.astro';
import Arrow from './icons/Arrow.astro';
import Phone from './icons/Phone.astro';
import Email from './icons/Email.astro';
import Code from './icons/Code.astro';
import Globe from './icons/Globe.astro';
import Design from './icons/Design.astro';
import Speed from './icons/Speed.astro';
import Shield from './icons/Shield.astro';
import Support from './icons/Support.astro';
import Analytics from './icons/Analytics.astro';
import Search from './icons/Search.astro';
import ShoppingCart from './icons/ShoppingCart.astro';
import Cloud from './icons/Cloud.astro';
import Settings from './icons/Settings.astro';
import Clock from './icons/Clock.astro';
import Database from './icons/Database.astro';
import Mobile from './icons/Mobile.astro';
import Share from './icons/Share.astro';
import Lightning from './icons/Lightning.astro';

export interface Props {
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
  id?: string;
  target?: '_blank' | '_self' | '_parent' | '_top';
  mensaje?: string; // Mensaje personalizado para WhatsApp (si se usa, será botón WhatsApp)
  icon?: 'phone' | 'email' | 'code' | 'globe' | 'design' | 'speed' | 'shield' | 'support' | 'analytics' | 'search' | 'shopping-cart' | 'cloud' | 'settings' | 'clock' | 'database' | 'mobile' | 'share' | 'arrow' | 'whatsapp' | 'lightning'; // Icono opcional
}

const { 
  href, 
  type = 'button', 
  disabled = false, 
  class: className = '', 
  id,
  target = '_self',
  mensaje,
  icon
} = Astro.props;

// Determinar la URL y configuración
let finalHref = href;
let finalTarget = target;
let isWhatsApp = false;

if (mensaje && !href) {
  // Si tiene mensaje, es botón WhatsApp
  finalHref = generateWhatsAppURL(mensaje);
  finalTarget = '_blank';
  isWhatsApp = true;
}

// Mapeo de iconos
const iconComponents = {
  phone: Phone,
  email: Email,
  code: Code,
  globe: Globe,
  design: Design,
  speed: Speed,
  shield: Shield,
  support: Support,
  analytics: Analytics,
  search: Search,
  'shopping-cart': ShoppingCart,
  cloud: Cloud,
  settings: Settings,
  clock: Clock,
  database: Database,
  mobile: Mobile,
  share: Share,
  arrow: Arrow,
  whatsapp: WhatsApp,
  lightning: Lightning
};

const IconComponent = icon ? iconComponents[icon] : null;

const Element = finalHref ? 'a' : 'button';
---

<Element
  href={finalHref}
  type={!finalHref ? type : undefined}
  disabled={!finalHref ? disabled : undefined}
  target={finalHref ? finalTarget : undefined}
  id={id}
  class={`btn-primary ${className}`}
>
  {isWhatsApp && !icon && (
    <WhatsApp class="btn-icon" size="20" />
  )}
  {IconComponent && (
    <IconComponent class="btn-icon" size="20" />
  )}
  <slot />
</Element>

<style>
  .btn-primary {
    min-width: 120px;
    position: relative;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 13px 28px;
    border: 0;
    border-radius: 9999px; /* Full border-radius para efecto cápsula */
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.233);
    background: radial-gradient(
      ellipse at bottom,
      rgb(34, 119, 255) 0%, /* Azul claro */
      rgb(0, 53, 197) 45%  /* Azul oscuro */
    );
    color: white;
    text-decoration: none;
    font-weight: 400;
    transition: all 1s cubic-bezier(0.15, 0.83, 0.66, 1);
  }

  .btn-primary::before {
    content: "";
    width: 70%;
    height: 1px;
    position: absolute;
    bottom: 0;
    left: 15%;
    background: rgb(255, 255, 255);
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    opacity: 0.2;
    transition: all .3s cubic-bezier(0.15, 0.83, 0.66, 1);
  }

  .btn-primary:hover::before {
    opacity: 1;
  }

  .btn-primary:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .btn-primary:disabled:hover {
    transform: none;
  }

  .btn-primary :global(.btn-icon) {
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
  }

  /* Responsive PC styles */
  @media (min-width: 768px) {
    .btn-primary {
      padding: .7rem 2rem;
      font-size: 1.125rem;
      min-width: 150px;
    }
    
    .btn-primary :global(.btn-icon) {
      width: 1.25rem;
      height: 1.25rem;
    }
  }
</style>