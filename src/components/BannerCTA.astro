---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import Titulo from './Titulo.astro';
import Parrafo from './Parrafo.astro';
import BotonPrimario from './BotonPrimario.astro';
import BotonSecundario from './BotonSecundario.astro';
import OptimizedImage from './OptimizedImage.astro';

export interface Props {
  // Contenido
  titulo: string;
  parrafo: string;
  highlight?: string;
  
  // Imágenes
  imagenFondo: ImageMetadata;
  imagenAcompanante: ImageMetadata;
  imagenAlt?: string;
  
  // Métricas/Iconos
  metricas?: Array<{
    icono: string;
    texto: string;
  }>;
}

// Definición de iconos SVG
const iconos = {
  ventas: 'M13 7h8m0 0v8m0-8l-8 8-4-4-6 6',
  ganancias: 'M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1',
  clientes: 'M17 20h5v-2a3 3 0 0 0-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 0 1 5.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 0 1 9.288 0M15 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0zm6 3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM7 10a2 2 0 1 1-4 0 2 2 0 0 1 4 0z',
  proyectos: 'M9 12l2 2 4-4m6 2a9 9 0 1 1-18 0 9 9 0 0 1 18 0z',
  rapidez: 'M13 10V3L4 14h7v7l9-11h-7z',
  pasion: 'M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z',
  calidad: 'M11.48 3.499a.562.562 0 0 1 1.04 0l2.125 5.111a.563.563 0 0 0 .475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 0 0-.182.557l1.285 5.385a.562.562 0 0 1-.84.61l-4.725-2.885a.563.563 0 0 0-.586 0L6.982 20.54a.562.562 0 0 1-.84-.61l1.285-5.386a.562.562 0 0 0-.182-.557l-4.204-3.602a.563.563 0 0 1 .321-.988l5.518-.442a.563.563 0 0 0 .475-.345L11.48 3.5z',
  confianza: 'M9 12.75L11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0z',
  innovacion: 'M12 18v-5.25m0 0a6.01 6.01 0 0 0 1.5-.189m-1.5.189a6.01 6.01 0 0 1-1.5-.189m3.75 7.478a12.06 12.06 0 0 1-4.5 0m3.75 2.383a14.406 14.406 0 0 1-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 1 0-7.517 0c.85.493 1.509 1.333 1.509 2.316V18',
  soporte: 'M8.625 12a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0H8.25m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0H12m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0h-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 0 1-2.555-.337A5.972 5.972 0 0 1 5.41 20.97a5.969 5.969 0 0 1-.474-.065 4.48 4.48 0 0 0 .978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z'
};

const {
  titulo,
  parrafo,
  highlight,
  imagenFondo,
  imagenAcompanante,
  imagenAlt = 'Banner CTA',
  metricas = [
    {
      icono: 'ventas',
      texto: '+Ventas'
    },
    {
      icono: 'ganancias',
      texto: '+Ganancias'
    },
    {
      icono: 'clientes',
      texto: '+Clientes'
    }
  ]
} = Astro.props;

// Función para obtener el path del icono
function getIconPath(iconName: string): string {
  return iconos[iconName as keyof typeof iconos] || iconos.ventas;
}

// Todos los iconos son azules por defecto
const iconColor = 'text-blue-500';
---

<section class="px-3 pb-10 lg:pb-20">
  <div class="relative pt-10 lg:pt-18 px-5 lg:px-5 max-w-7xl rounded-2xl mx-auto overflow-hidden">
    <!-- Imagen de fondo optimizada -->
    <Image 
      src={imagenFondo} 
      alt="Banner background" 
      class="absolute inset-0 w-full h-full object-cover object-top rounded-2xl"
      width={1200}
      height={600}
    />
    <div class="relative z-10 max-w-6xl mx-auto pb-0">
       <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
        <!-- Contenido izquierda -->
        <div class="text-center lg:text-left">
          <Titulo level={1} alignMobile="left" alignDesktop="left" highlight={highlight} class="mb-6">
            {titulo}
          </Titulo>
          <Parrafo alignMobile="left" alignDesktop="left" class="mb-8 max-w-[450px]">
            {parrafo}
          </Parrafo>
          <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start mb-8">
            <slot name="botones" />
          </div>
          
          <!-- Métricas -->
          {metricas && metricas.length > 0 && (
            <div class="flex flex-row items-center justify-center lg:justify-start gap-6 sm:gap-8">
              {metricas.map((metrica, index) => (
                <Fragment>
                  <!-- Métrica -->
                  <div class="flex flex-col items-center text-center">
                    <svg class={`w-8 h-8 ${iconColor} mb-2`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getIconPath(metrica.icono)}></path>
                    </svg>
                    <span class="text-gray-400 text-lg">{metrica.texto}</span>
                  </div>
                  
                  <!-- Separador -->
                  {index < metricas.length - 1 && (
                    <div class="hidden sm:block w-px h-16 bg-gradient-to-b from-transparent via-white to-transparent opacity-30"></div>
                  )}
                </Fragment>
              ))}
            </div>
          )}
        </div>
        
        <!-- Imagen derecha -->
        <div class="w-full lg:flex lg:justify-end">
          <OptimizedImage src={imagenAcompanante} alt={imagenAlt} class="w-full" />
        </div>
      </div>
    </div>
  </div>
</section>