---
import OptimizedImage from './OptimizedImage.astro';
import type { ImageMetadata } from 'astro';

export interface Props {
  id: string;
  title: string;
  description: string;
  category: string;
  technologies: string[];
  images: (string | ImageMetadata)[];
  year: number;
  status: string;
  class?: string;
}

const { id, title, description, category, technologies, images, year, status, class: className = "" } = Astro.props;
---

<div class={`border-2 border-white/10 relative rounded-2xl overflow-hidden h-[520px] min-h-[520px] ${className}`} data-project-id={id}>
  <div class="w-full h-full relative flex items-end p-2">
    <OptimizedImage 
      src={images[0]} 
      alt={title} 
      class="absolute inset-0 w-full h-full object-cover object-top"
      loading="lazy"
    />
    <span class="absolute top-4 right-4 z-30 text-xs font-semibold border-1 border-white/10 text-white bg-black/60 backdrop-blur-md px-2 py-1 rounded-md">{year}</span>
    <span class="absolute top-4 left-4 z-30 text-xs font-normal border-1 border-white/10 text-white bg-black/80 backdrop-blur-md px-2 py-1 rounded-md">{status}</span>
    <div class="relative z-20 w-full">
      <div class="bg-black/80 backdrop-blur-md rounded-xl p-5 min-h-[200px]">
        <div class="text-blue-400 text-xs font-semibold uppercase tracking-wider mb-2">{category}</div>
        <h3 class="text-xl font-bold text-white mb-2 leading-tight">{title}</h3>
        <p class="text-sm text-gray-300 mb-3 leading-relaxed">{description}</p>
        <div class="flex flex-wrap gap-1 mb-3">
          {technologies.slice(0, 2).map(tech => (
            <span class="bg-blue-500/20 text-blue-300 px-1.5 py-0.5 rounded text-xs font-medium">{tech}</span>
          ))}
          {technologies.length > 2 && (
            <span class="text-gray-400 text-xs font-medium px-1.5 py-0.5">+{technologies.length - 2}</span>
          )}
        </div>
        <button class="group inline-flex items-center text-sm font-normal text-gray-300 bg-black/20 px-4 py-2 rounded-lg border border-transparent cursor-pointer transition-all duration-200 hover:bg-black/60 hover:border-white/20" onclick={`openProjectModal('${id}')`}>
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="mr-2">
            <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" fill="currentColor"/>
          </svg>
          Ver Detalles
          <svg class="w-4 h-4 ml-2 transition-transform duration-200 group-hover:translate-x-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  /* Responsive para m√≥vil */
  @media (max-width: 768px) {
    .project-card {
      height: 470px !important;
    }

    .project-content {
      padding: 0.75rem !important;
    }

    .project-year-corner {
      top: 0.75rem !important;
      right: 0.75rem !important;
    }

    .project-status-corner {
      top: 0.75rem !important;
      left: 0.75rem !important;
    }

    .project-title {
      font-size: 1.125rem !important;
    }

    .project-description {
      font-size: 0.8rem !important;
    }

    .project-button {
      font-size: 0.8rem !important;
      padding: 0.4rem 0.8rem !important;
    }
  }
</style>